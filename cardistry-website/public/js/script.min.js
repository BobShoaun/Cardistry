/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/script.js":
/*!***********************!*\
  !*** ./src/script.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var cardistry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cardistry */ \"./node_modules/cardistry/index.js\");\n/* harmony import */ var cardistry_setup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cardistry/setup */ \"./node_modules/cardistry/setup.js\");\n/* harmony import */ var cardistry_presets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cardistry/presets */ \"./node_modules/cardistry/presets.js\");\n\r\n\r\n\r\n\r\n(0,cardistry_setup__WEBPACK_IMPORTED_MODULE_1__.setupCards)(\".example.main\");\r\n\r\n(0,cardistry__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\r\n  target: \".example.main\",\r\n  loop: true,\r\n  // relative: true,\r\n  states: [\r\n    {\r\n      delay: 700,\r\n    },\r\n    {\r\n      ...(0,cardistry_presets__WEBPACK_IMPORTED_MODULE_2__.spreadCenter)(500),\r\n      delay: 500,\r\n    },\r\n    {\r\n      delay: 500,\r\n      ...(0,cardistry_presets__WEBPACK_IMPORTED_MODULE_2__.fan)(7),\r\n    },\r\n    {\r\n      delay: 700,\r\n      translateY: (i, n) => (i + 0.5 - n / 2) * 20,\r\n      translateX: (i, n) => (i + 0.5 - n / 2) * 25,\r\n      duration: 300,\r\n    },\r\n    {\r\n      delay: 200,\r\n      duration: 400,\r\n      translateY: (i, n) => (i + 0.5 - n / 2) * -20,\r\n      translateX: (i, n) => (i + 0.5 - n / 2) * -25,\r\n    },\r\n    {\r\n      delay: i => i * 50,\r\n      translateX: (i, n) => (i + 0.5 - n / 2) * -25,\r\n    },\r\n    {\r\n      ...(0,cardistry_presets__WEBPACK_IMPORTED_MODULE_2__.flip)(),\r\n      translateX: (i, n) => (i + 0.5 - n / 2) * -25,\r\n      delay: i => i * 50,\r\n      zIndex: (i, n) => n - i,\r\n    },\r\n    // {\r\n    //   rotateZ: (i, n) => (i + 0.5 - n / 2) * -20,\r\n    //   translateX: (i, n) => (i + 0.5 - n / 2) * -25,\r\n    //   delay: 500,\r\n    //   contentRotateY: 180,\r\n    // },\r\n    {\r\n      contentRotateY: 180,\r\n      delay: 700,\r\n    },\r\n    {\r\n      contentRotateY: 180,\r\n      ...(0,cardistry_presets__WEBPACK_IMPORTED_MODULE_2__.disperse)(500),\r\n    },\r\n  ],\r\n});\r\n\r\n/*\r\n    do we want them to all play at the same time, or stagger them?\r\n    if  we want to stagger, which card goes first? front or back?\r\n\r\n    simple builder:\r\n    preset animations, just play them, reset b4 each anim\r\n\r\n    animation builder:\r\n    specify deltas\r\n    */\r\n\n\n//# sourceURL=webpack://cardistry-website/./src/script.js?");

/***/ }),

/***/ "./node_modules/cardistry/index.js":
/*!*****************************************!*\
  !*** ./node_modules/cardistry/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// main function for animation\r\nconst cardistry = async ({ target, states, loop, relative }) => {\r\n  const hand = document.querySelector(target);\r\n  if (!hand) return;\r\n\r\n  const cards = hand.querySelectorAll(\".card\");\r\n  const cardContents = [...cards].map(card => card.querySelector(\".content\"));\r\n  const cardProps = [...cards];\r\n\r\n  const resetCardProps = transitionPropsOnly => {\r\n    cardProps.forEach(card => {\r\n      card.duration = 200;\r\n      card.delay = 0;\r\n      card.timing = \"ease\";\r\n      if (transitionPropsOnly) return;\r\n      card.translateX = 0;\r\n      card.translateY = 0;\r\n      card.rotateX = 0;\r\n      card.rotateY = 0;\r\n      card.rotateZ = 0;\r\n      card.scale = 1;\r\n      card.zIndex = 1;\r\n      card.transformOrigin = \"50% 50%\";\r\n      card.contentRotateY = 0;\r\n      card.contentRotateZ = 0;\r\n      card.hoverScale = 1;\r\n    });\r\n  };\r\n\r\n  resetCardProps();\r\n\r\n  const getValue = value => (typeof value === \"function\" ? value(i, cards.length) : value);\r\n\r\n  const apply = async state => {\r\n    resetCardProps(relative);\r\n\r\n    for (let i = 0; i < cards.length; i++) {\r\n      const index = state.flip ? cards.length - i - 1 : i;\r\n\r\n      for (const [prop, value] of Object.entries(state))\r\n        cardProps[index][prop] = typeof value === \"function\" ? value(index, cards.length) : value;\r\n    }\r\n\r\n    const totalDurations = [];\r\n    for (let i = 0; i < cards.length; i++) {\r\n      const {\r\n        translateX,\r\n        translateY,\r\n        rotateX,\r\n        rotateY,\r\n        rotateZ,\r\n        scale,\r\n        zIndex,\r\n        transformOrigin,\r\n        contentRotateY,\r\n        contentRotateZ,\r\n        hoverScale,\r\n        hover,\r\n        focus,\r\n        duration,\r\n        delay,\r\n        timing,\r\n      } = cardProps[i];\r\n\r\n      totalDurations[i] = delay + duration;\r\n\r\n      cards[i].style.zIndex = zIndex;\r\n\r\n      cards[i].style.transitionDuration = `${duration}ms`;\r\n      cards[i].style.transitionDelay = `${delay}ms`;\r\n      cards[i].style.transitionTimingFunction = timing;\r\n\r\n      cards[i].style.transformOrigin = transformOrigin;\r\n      cards[i].style.transform = `translateX(${translateX}px) \r\n                                  translateY(${translateY}px) \r\n                                  rotateX(${rotateX}deg) \r\n                                  rotateY(${rotateY}deg) \r\n                                  rotateZ(${rotateZ}deg) \r\n                                  scale(${scale})`;\r\n\r\n      cardContents[i].style.transitionDuration = `${duration}ms`;\r\n      cardContents[i].style.transitionDelay = `${delay}ms`;\r\n      cardContents[i].style.transform = `rotateY(${contentRotateY}deg) \r\n                                         rotateZ(${contentRotateZ}deg)`;\r\n\r\n      cards[i].onmouseover = () => {\r\n        cardContents[i].style.transform = `translateX(${hover?.translateX ?? 0}px) \r\n                                           translateY(${hover?.translateY ?? 0}px)\r\n                                           rotateY(${hover?.rotateY}deg) \r\n                                           rotateZ(${contentRotateZ}deg) \r\n                                           scale(${hover?.scale ?? 1})`;\r\n      };\r\n\r\n      cards[i].onmouseleave = () => {\r\n        cardContents[i].style.transform = `rotateY(${contentRotateY}deg) \r\n                                           rotateZ(${contentRotateZ}deg) \r\n                                           scale(${scale})`;\r\n      };\r\n\r\n      cards[i].onfocus = () => {\r\n        cardContents[i].style.transform = `translateX(${focus?.translateX ?? 0}px) \r\n                                           translateY(${focus?.translateY ?? 0}px)\r\n                                           rotateY(${focus?.rotateY}deg) \r\n                                           rotateZ(${contentRotateZ}deg) \r\n                                           scale(${focus?.scale ?? 1})`;\r\n      };\r\n\r\n      cards[i].onblur = () => {\r\n        cardContents[i].style.transform = `rotateY(${contentRotateY}deg) \r\n                                           rotateZ(${contentRotateZ}deg) \r\n                                           scale(${scale})`;\r\n      };\r\n    }\r\n\r\n    return new Promise((resolve, reject) => setTimeout(resolve, Math.max(...totalDurations)));\r\n  };\r\n\r\n  // await new Promise(resolve => setTimeout(resolve, 500)); // sleep\r\n\r\n  if (typeof loop === \"boolean\") while (loop) for (const state of states) await apply(state);\r\n\r\n  for (let i = loop ?? 0; i >= 0; i--) for (const state of states) await apply(state);\r\n};\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (cardistry);\r\n\n\n//# sourceURL=webpack://cardistry-website/./node_modules/cardistry/index.js?");

/***/ }),

/***/ "./node_modules/cardistry/presets.js":
/*!*******************************************!*\
  !*** ./node_modules/cardistry/presets.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"spreadLeft\": () => (/* binding */ spreadLeft),\n/* harmony export */   \"spreadRight\": () => (/* binding */ spreadRight),\n/* harmony export */   \"spreadCenter\": () => (/* binding */ spreadCenter),\n/* harmony export */   \"stack\": () => (/* binding */ stack),\n/* harmony export */   \"disperse\": () => (/* binding */ disperse),\n/* harmony export */   \"fan\": () => (/* binding */ fan),\n/* harmony export */   \"flip\": () => (/* binding */ flip)\n/* harmony export */ });\n// preset animations\r\nconst spreadLeft = () => ({\r\n  translateX: i => i * -25,\r\n});\r\n\r\nconst spreadRight = () => ({\r\n  translateX: i => i * 25,\r\n});\r\n\r\nconst spreadCenter = (duration = 200) => ({\r\n  translateX: (i, n) => (i + 0.5 - n / 2) * 25,\r\n  duration,\r\n});\r\n\r\nconst stack = () => ({\r\n  translateX: 0,\r\n  translateY: 0,\r\n  rotateZ: 0,\r\n  duration: 300,\r\n  // delay: i => i * 100,\r\n  // transformOrigin: \"50% 50%\",\r\n});\r\n\r\nconst disperse = (amount = 200) => ({\r\n  translateX: () => Math.random() * amount - amount / 2,\r\n  translateY: () => Math.random() * amount - amount / 2,\r\n  rotateZ: () => Math.random() * 180 - 90,\r\n  duration: 500,\r\n  delay: (i, n) => (n - i) * 100,\r\n});\r\n\r\nconst fan = (angle = 5) => ({\r\n  transformOrigin: \"50% 200%\",\r\n  rotateZ: (i, n) => (i + 0.5 - n / 2) * angle,\r\n  duration: 500,\r\n});\r\n\r\nconst flip = () => ({\r\n  contentRotateY: 180,\r\n  duration: 400,\r\n});\r\n\n\n//# sourceURL=webpack://cardistry-website/./node_modules/cardistry/presets.js?");

/***/ }),

/***/ "./node_modules/cardistry/setup.js":
/*!*****************************************!*\
  !*** ./node_modules/cardistry/setup.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"setupCards\": () => (/* binding */ setupCards)\n/* harmony export */ });\n// temporary function, so i dont have to copy paste all the cards in the DOM manually\r\n\r\nconst setupCards = target => {\r\n  const hand = document.querySelector(target);\r\n  if (!hand) return;\r\n\r\n  const numCards = 15;\r\n  const cardHeight = 120;\r\n  const cardWidth = 75;\r\n\r\n  const card = hand.querySelector(\".card\");\r\n\r\n  for (let i = 0; i < numCards; i++) {\r\n    const newCard = card.cloneNode(true);\r\n    newCard.tabIndex = i + 10;\r\n    hand.appendChild(newCard);\r\n\r\n    // const card = document.createElement(\"div\");\r\n    // card.classList.add(\"card\");\r\n    // card.style.width = `${cardWidth}px`;\r\n    // card.style.height = `${cardHeight}px`;\r\n    // const content = document.createElement(\"div\");\r\n    // content.classList.add(\"content\");\r\n    // const front = document.createElement(\"div\");\r\n    // front.classList.add(\"front\");\r\n\r\n    // const back = document.createElement(\"div\");\r\n    // back.classList.add(\"back\");\r\n    // content.appendChild(front);\r\n    // content.appendChild(back);\r\n    // card.appendChild(content);\r\n    // hand.appendChild(card);\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack://cardistry-website/./node_modules/cardistry/setup.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/script.js");
/******/ 	
/******/ })()
;